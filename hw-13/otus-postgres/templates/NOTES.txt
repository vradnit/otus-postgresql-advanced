
{{- if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "otus-postgres.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  export PGPASSWORD="$(oc get secret --namespace {{ .Release.Namespace }} {{ include "otus-postgres.fullname" . }}-secrets -o jsonpath='{ .data.POSTGRES_PASSWORD }' | base64 -d)"
  export PGUSER="$(oc get secret --namespace {{ .Release.Namespace }} {{ include "otus-postgres.fullname" . }}-secrets -o jsonpath='{ .data.POSTGRES_USER }' | base64 -d)"
  psql -h $NODE_IP -p $NODE_PORT -U $PGUSER postgres
{{- else if contains "ClusterIP" .Values.service.type }}
  # In first console enter:
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "otus-postgres.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME $CONTAINER_PORT:$CONTAINER_PORT

  # In second console enter:
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}") 
  export PGPASSWORD="$(oc get secret --namespace {{ .Release.Namespace }} {{ include "otus-postgres.fullname" . }}-secrets -o jsonpath='{ .data.POSTGRES_PASSWORD }' | base64 -d)"
  export PGUSER="$(oc get secret --namespace {{ .Release.Namespace }} {{ include "otus-postgres.fullname" . }}-secrets -o jsonpath='{ .data.POSTGRES_USER }' | base64 -d)"
  psql -h 127.0.0.1 -p $CONTAINER_PORT -U $PGUSER postgres
{{- end }}
